<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  <display-name>prj03</display-name>
  <!-- 
# 스프링의 front 컨트롤러 설정..
1. 스프링에서 사용한 front controller인 DispatcherServlet 선언.
	1) url pattern 기준 마지막에 ###.do할 때, 스프링을 사용하겠습니다. 
		라고 선언하는 부분을 처리..
		
		# 웹 서버 호출 처리 proc
		1. url 호출 
			http://localhost:7080/springweb/start.do
		2. web.xml	호출  : 모든 웹 프로그램밍은 여기서 부터 시작된다.
		3. web.xml에 설정한 내용 처리.
			- front 컨트롤러인 DispatcherServlet(스프링 프레임웍 api) 호출
			- 컨테이너를 통해서 controller를 비롯한 여러 클래스의 내부 메서드를
				url pattern 방식으로 호출하여 처리한다.
			- 컨테이너 설정 부분 호출..
				<url-pattern>*.do</url-pattern> 마지막 *.do 끝나면
				front controller로호출하게 처리..
				front 컨트롤러인 DispatcherSerlvet호출하고,
				이 컨트롤러에서 선언 container 선언 방식인 
				dispatcher-servlet.xml을 호출하여 처리한다..
		4. dispatcher-servlet.xml
			- 스프링 컨테이너.
			- 사용하고자 하는 객체를 class로 선언하고,
			- xml형식으로 선언된 클래스를 객체로 메모리에 오려지게 한다.
					
					
--> 
 
	<servlet>
		<!-- 
		dispatcher라는 이름의 스프링 관련 container 설정 파일을 
			WEB-INF 하위에 dispatcher-servlet.xml로 선언하고,
			이 설정파일을 활용해서 사용한다.
		 -->
		<servlet-name>dispatcher</servlet-name>		
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<multipart-config>
			<max-file-size>52428800</max-file-size>
			<max-request-size>52428800</max-request-size>
			<file-size-threshold>0</file-size-threshold>
		</multipart-config>
	</servlet>
	<servlet-mapping>
		<!-- url 패턴이 마지막에 .do로 끝나면, 스프링에서 지원하는 front 컨트롤러를
		사용한다고 선언하여 처리.. 
		
		
		-->
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
	
	
<!-- 한글 post방식 전달될 때, 자동 encoding filter 클래스 선언. -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- <filter>
		<display-name>springMultipartFilter </display-name>
		<filter-name>springMultipartFilter</filter-name>
		<filter-class>org.springframework.web.multipart.commons.MultipartFilter</filter-class>
		<init-param>
			<param-name>multipartResolverBeanName</param-name>
			<param-value>multipartResolver</param-value>
		</init-param>
	</filter>	
	<filter-mapping>
			<filter-name>springMultipartFilter</filter-name>
			<url-pattern>/*</url-pattern>
	</filter-mapping> -->
	
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  
  <!--  -->
  <context-param> <param-name>contextConfigLocation</param-name> 
  <param-value> /WEB-INF/spring/root-context.xml /WEB-INF/spring/message-context.xml </param-value> 
  </context-param>

</web-app>